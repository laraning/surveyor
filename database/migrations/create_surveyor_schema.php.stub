<?php

use Illuminate\Support\Facades\Schema;
use Spatie\Permission\Models\Permission;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateSurveyorSchema extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('profiles', function (Blueprint $table) {
            /** Columns */
            $table->increments('id');
            $table->string('name');
            $table->string('code')
                  ->nullable()
                  ->index();

            $table->integer('role_id')
                  ->unsigned()
                  ->index();

            $table->integer('permission_id')
                  ->unsigned()
                  ->index();

            /** System columns */
            $table->timestamps();
            $table->softDeletes();

            /** Engine */
            $table->engine = 'InnoDB';

            /** Collation */
            $table->charset = 'utf8';
            $table->collation = 'utf8_unicode_ci';
        });

        Schema::create('profile_user', function (Blueprint $table) {
            /** Columns */
            $table->increments('id');
            $table->integer('user_id');
            $table->integer('profile_id');

            /** System columns */
            $table->timestamps();
            $table->softDeletes();

            /** Engine */
            $table->engine = 'InnoDB';

            /** Collation */
            $table->charset = 'utf8';
            $table->collation = 'utf8_unicode_ci';
        });

        Schema::create('profile_scopes', function (Blueprint $table) {
            /** Columns */
            $table->increments('id');
            $table->integer('profile_id')
                  ->unsigned()
                  ->index();

            $table->string('model')
                  ->comment('Model full qualified namespace.');

            $table->string('scope')
                  ->comment('Global scope full qualified namespace.');

            /** System columns */
            $table->timestamps();
            $table->softDeletes();

            /** Engine */
            $table->engine = 'InnoDB';

            /** Collation */
            $table->charset = 'utf8';
            $table->collation = 'utf8_unicode_ci';
        });

        Schema::create('profile_policies', function (Blueprint $table) {
            /** Columns */
            $table->increments('id');
            $table->integer('profile_id');

            $table->string('model')
                  ->comment('Model full qualified class namespace.');

            $table->string('policy')
                  ->comment('Policy full qualified class namespace.');

            $table->boolean('viewAny')
                  ->default(false);

            $table->boolean('view')
                  ->default(false);

            $table->boolean('create')
                  ->default(false);

            $table->boolean('update')
                  ->default(false);

            $table->boolean('delete')
                  ->default(false);

            $table->boolean('restore')
                  ->default(false);

            $table->boolean('forceDelete')
                  ->default(false);

            /** System columns */
            $table->timestamps();
            $table->softDeletes();

            /** Engine */
            $table->engine = 'InnoDB';

            /** Collation */
            $table->charset = 'utf8';
            $table->collation = 'utf8_unicode_ci';
        });

        /** Relationships */
        /*
        Schema::table('user_profiles', function (Blueprint $table) {
            $table->foreign('permission_id')->references('id')->on(config('permission.table_names.permissions'));
            $table->foreign('role_id')->references('id')->on(config('permission.table_names.roles'));
        });
        */
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::drop('profiles');
        Schema::drop('profile_user');
        Schema::drop('profile_scopes');
        Schema::drop('profile_policies');
    }
}
